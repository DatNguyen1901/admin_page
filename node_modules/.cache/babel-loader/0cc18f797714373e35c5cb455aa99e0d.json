{"ast":null,"code":"var _jsxFileName = \"/home/hazo/my-react/src/Page/Login/Component/LoginForm.js\";\nimport React from 'react';\nimport './LoginForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {}\n    };\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true; //Name\n\n    if (!fields[\"name\"]) {\n      formIsValid = false;\n      errors[\"name\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"name\"] !== \"undefined\") {\n      if (!fields[\"name\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"name\"] = \"Only letters\";\n      }\n    } //Email\n\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      alert(\"Form submitted\");\n    } else {\n      alert(\"Form has errors.\");\n    }\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        name: \"contactform\",\n        className: \"contactform\",\n        onSubmit: this.contactSubmit.bind(this),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: \"name\",\n              type: \"text\",\n              size: \"30\",\n              placeholder: \"Name\",\n              onChange: this.handleChange.bind(this, \"name\"),\n              value: this.state.fields[\"name\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: this.state.errors[\"name\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              refs: \"email\",\n              type: \"text\",\n              size: \"30\",\n              placeholder: \"Email\",\n              onChange: this.handleChange.bind(this, \"email\"),\n              value: this.state.fields[\"email\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"red\"\n              },\n              children: this.state.errors[\"email\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              refs: \"phone\",\n              type: \"text\",\n              size: \"30\",\n              placeholder: \"Phone\",\n              onChange: this.handleChange.bind(this, \"phone\"),\n              value: this.state.fields[\"phone\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              refs: \"address\",\n              type: \"text\",\n              size: \"30\",\n              placeholder: \"Address\",\n              onChange: this.handleChange.bind(this, \"address\"),\n              value: this.state.fields[\"address\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12\",\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-lg pro\",\n              id: \"submit\",\n              value: \"Submit\",\n              children: \"Send Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/hazo/my-react/src/Page/Login/Component/LoginForm.js"],"names":["React","LoginForm","Component","constructor","props","state","fields","errors","handleValidation","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","setState","contactSubmit","e","preventDefault","alert","handleChange","field","target","value","render","bind","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAIF;;AAEDC,EAAAA,gBAAgB,GAAE;AACd,QAAIF,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIC,MAAM,GAAG,EAAb;AACA,QAAIE,WAAW,GAAG,IAAlB,CAHc,CAKd;;AACA,QAAG,CAACH,MAAM,CAAC,MAAD,CAAV,EAAmB;AAChBG,MAAAA,WAAW,GAAG,KAAd;AACAF,MAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,iBAAjB;AACF;;AAED,QAAG,OAAOD,MAAM,CAAC,MAAD,CAAb,KAA0B,WAA7B,EAAyC;AACtC,UAAG,CAACA,MAAM,CAAC,MAAD,CAAN,CAAeI,KAAf,CAAqB,aAArB,CAAJ,EAAwC;AACrCD,QAAAA,WAAW,GAAG,KAAd;AACAF,QAAAA,MAAM,CAAC,MAAD,CAAN,GAAiB,cAAjB;AACF;AACH,KAhBa,CAkBd;;;AACA,QAAG,CAACD,MAAM,CAAC,OAAD,CAAV,EAAoB;AACjBG,MAAAA,WAAW,GAAG,KAAd;AACAF,MAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,iBAAlB;AACF;;AAED,QAAG,OAAOD,MAAM,CAAC,OAAD,CAAb,KAA2B,WAA9B,EAA0C;AACvC,UAAIK,SAAS,GAAGL,MAAM,CAAC,OAAD,CAAN,CAAgBM,WAAhB,CAA4B,GAA5B,CAAhB;AACA,UAAIC,UAAU,GAAGP,MAAM,CAAC,OAAD,CAAN,CAAgBM,WAAhB,CAA4B,GAA5B,CAAjB;;AAEA,UAAI,EAAED,SAAS,GAAGE,UAAZ,IAA0BF,SAAS,GAAG,CAAtC,IAA2CL,MAAM,CAAC,OAAD,CAAN,CAAgBQ,OAAhB,CAAwB,IAAxB,KAAiC,CAAC,CAA7E,IAAkFD,UAAU,GAAG,CAA/F,IAAqGP,MAAM,CAAC,OAAD,CAAN,CAAgBS,MAAhB,GAAyBF,UAA1B,GAAwC,CAA9I,CAAJ,EAAsJ;AACnJJ,QAAAA,WAAW,GAAG,KAAd;AACAF,QAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,oBAAlB;AACD;AACL;;AAED,SAAKS,QAAL,CAAc;AAACT,MAAAA,MAAM,EAAEA;AAAT,KAAd;AACA,WAAOE,WAAP;AACH;;AAEDQ,EAAAA,aAAa,CAACC,CAAD,EAAG;AACXA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAG,KAAKX,gBAAL,EAAH,EAA2B;AACxBY,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACF,KAFD,MAEK;AACFA,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACF;AAEJ;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQJ,CAAR,EAAU;AAClB,QAAIZ,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACAA,IAAAA,MAAM,CAACgB,KAAD,CAAN,GAAgBJ,CAAC,CAACK,MAAF,CAASC,KAAzB;AACA,SAAKR,QAAL,CAAc;AAACV,MAAAA;AAAD,KAAd;AACH;;AAEDmB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA,6BACG;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,SAAS,EAAC,aAAnC;AAAiD,QAAA,QAAQ,EAAG,KAAKR,aAAL,CAAmBS,IAAnB,CAAwB,IAAxB,CAA5D;AAAA,gCACK;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAA,oCACK;AAAO,cAAA,GAAG,EAAC,MAAX;AAAkB,cAAA,IAAI,EAAC,MAAvB;AAA8B,cAAA,IAAI,EAAC,IAAnC;AAAwC,cAAA,WAAW,EAAC,MAApD;AAA2D,cAAA,QAAQ,EAAE,KAAKL,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,EAA6B,MAA7B,CAArE;AAA2G,cAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,MAAX,CAAkB,MAAlB;AAAlH;AAAA;AAAA;AAAA;AAAA,oBADL,eAEK;AAAM,cAAA,KAAK,EAAE;AAACqB,gBAAAA,KAAK,EAAE;AAAR,eAAb;AAAA,wBAA8B,KAAKtB,KAAL,CAAWE,MAAX,CAAkB,MAAlB;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAFL,eAGI;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAIG;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,IAAI,EAAC,MAAzB;AAAgC,cAAA,IAAI,EAAC,IAArC;AAA0C,cAAA,WAAW,EAAC,OAAtD;AAA8D,cAAA,QAAQ,EAAE,KAAKc,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,EAA6B,OAA7B,CAAxE;AAA+G,cAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,MAAX,CAAkB,OAAlB;AAAtH;AAAA;AAAA;AAAA;AAAA,oBAJH,eAKG;AAAM,cAAA,KAAK,EAAE;AAACqB,gBAAAA,KAAK,EAAE;AAAR,eAAb;AAAA,wBAA8B,KAAKtB,KAAL,CAAWE,MAAX,CAAkB,OAAlB;AAA9B;AAAA;AAAA;AAAA;AAAA,oBALH,eAMG;AAAA;AAAA;AAAA;AAAA,oBANH,eAOG;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,IAAI,EAAC,MAAzB;AAAgC,cAAA,IAAI,EAAC,IAArC;AAA0C,cAAA,WAAW,EAAC,OAAtD;AAA8D,cAAA,QAAQ,EAAE,KAAKc,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,EAA6B,OAA7B,CAAxE;AAA+G,cAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,MAAX,CAAkB,OAAlB;AAAtH;AAAA;AAAA;AAAA;AAAA,oBAPH,eAQG;AAAA;AAAA;AAAA;AAAA,oBARH,eASG;AAAO,cAAA,IAAI,EAAC,SAAZ;AAAsB,cAAA,IAAI,EAAC,MAA3B;AAAkC,cAAA,IAAI,EAAC,IAAvC;AAA4C,cAAA,WAAW,EAAC,SAAxD;AAAkE,cAAA,QAAQ,EAAE,KAAKe,YAAL,CAAkBK,IAAlB,CAAuB,IAAvB,EAA6B,SAA7B,CAA5E;AAAqH,cAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,MAAX,CAAkB,SAAlB;AAA5H;AAAA;AAAA;AAAA;AAAA,oBATH,eAUG;AAAA;AAAA;AAAA;AAAA,oBAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADL,eAeV;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,iCACE;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,gBAAlB;AAAmC,cAAA,EAAE,EAAC,QAAtC;AACQ,cAAA,KAAK,EAAC,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAfU;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADJ;AA6BH;;AA/FsC;;AAkGxC,eAAeL,SAAf","sourcesContent":["import React from 'react';\nimport './LoginForm.css';\n\nclass LoginForm extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n        fields: {},\n        errors: {}\n    }\n }\n\n handleValidation(){\n     let fields = this.state.fields;\n     let errors = {};\n     let formIsValid = true;\n\n     //Name\n     if(!fields[\"name\"]){\n        formIsValid = false;\n        errors[\"name\"] = \"Cannot be empty\";\n     }\n\n     if(typeof fields[\"name\"] !== \"undefined\"){\n        if(!fields[\"name\"].match(/^[a-zA-Z]+$/)){\n           formIsValid = false;\n           errors[\"name\"] = \"Only letters\";\n        }        \n     }\n\n     //Email\n     if(!fields[\"email\"]){\n        formIsValid = false;\n        errors[\"email\"] = \"Cannot be empty\";\n     }\n\n     if(typeof fields[\"email\"] !== \"undefined\"){\n        let lastAtPos = fields[\"email\"].lastIndexOf('@');\n        let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n        if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n           formIsValid = false;\n           errors[\"email\"] = \"Email is not valid\";\n         }\n    }  \n\n    this.setState({errors: errors});\n    return formIsValid;\n}\n \ncontactSubmit(e){\n     e.preventDefault();\n\n     if(this.handleValidation()){\n        alert(\"Form submitted\");\n     }else{\n        alert(\"Form has errors.\")\n     }\n\n }\n\n handleChange(field, e){         \n     let fields = this.state.fields;\n     fields[field] = e.target.value;        \n     this.setState({fields});\n }\n\n render(){\n     return (\n         <div>           \n            <form name=\"contactform\" className=\"contactform\" onSubmit= {this.contactSubmit.bind(this)}>\n                 <div className=\"col-md-6\">\n                   <fieldset>\n                        <input ref=\"name\" type=\"text\" size=\"30\" placeholder=\"Name\" onChange={this.handleChange.bind(this, \"name\")} value={this.state.fields[\"name\"]}/>\n                        <span style={{color: \"red\"}}>{this.state.errors[\"name\"]}</span>\n                       <br/>\n                      <input refs=\"email\" type=\"text\" size=\"30\" placeholder=\"Email\" onChange={this.handleChange.bind(this, \"email\")} value={this.state.fields[\"email\"]}/>\n                      <span style={{color: \"red\"}}>{this.state.errors[\"email\"]}</span>\n                      <br/>\n                      <input refs=\"phone\" type=\"text\" size=\"30\" placeholder=\"Phone\" onChange={this.handleChange.bind(this, \"phone\")} value={this.state.fields[\"phone\"]}/>\n                      <br/>\n                      <input refs=\"address\" type=\"text\" size=\"30\" placeholder=\"Address\" onChange={this.handleChange.bind(this, \"address\")} value={this.state.fields[\"address\"]}/>\n                      <br/>\n                  </fieldset>\n               </div>\n  <div className=\"col-md-12\">\n    <fieldset>\n      <button className=\"btn btn-lg pro\" id=\"submit\"\n              value=\"Submit\">Send Message</button>\n    </fieldset>\n  </div>\n</form>\n\n   \n\n         </div>\n   )\n }\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}