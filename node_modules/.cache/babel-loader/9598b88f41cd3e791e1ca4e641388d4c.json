{"ast":null,"code":"var _jsxFileName = \"/home/hazo/Desktop/blog-reactjs/src/services/post/createPost.js\";\nimport React from 'react';\nimport { Modal, ModalHeader, ModalBody, Form, Alert, FormGroup, Input, Label, Button, ModalFooter } from 'reactstrap';\nimport createPost from '../../services/post/createPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalPost extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: '',\n      title: '',\n      error: ''\n    };\n    this.handleAddPost = this.handleAddPost.bind(this);\n    this.handleChangeContent = this.handleChangeContent.bind(this);\n    this.handleChangeTitle = this.handleChangeTitle.bind(this);\n  }\n\n  async handleAddPost() {\n    try {\n      const result = await createPost({ ...this.state,\n        error: undefined\n      });\n\n      if (result.err === 0) {\n        this.props.onAddPostSuccess(true);\n        this.props.closeModal();\n        return;\n      }\n\n      this.setState({ ...this.state,\n        error: 'Đăng bài thất bại!'\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n\n  handleChangeTitle(e) {\n    this.setState({ ...this.state,\n      title: e.target.value\n    });\n  }\n\n  handleChangeContent(e) {\n    this.setState({ ...this.state,\n      content: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: this.props.visible || false,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        toggle: this.props.closeModal,\n        children: \"Th\\xEAm b\\xE0i vi\\u1EBFt m\\u1EDBi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [this.state.error && /*#__PURE__*/_jsxDEV(Alert, {\n          color: \"warning\",\n          children: this.state.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"name\",\n              children: \"Ti\\xEAu \\u0111\\u1EC1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: this.state.title,\n              onChange: this.handleChangeTitle,\n              autoFocus: true,\n              name: \"email\",\n              id: \"name\",\n              placeholder: \"Ti\\xEAu \\u0111\\u1EC1 b\\xE0i vi\\u1EBFt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Label, {\n              for: \"user_name\",\n              children: \"N\\u1ED9i dung b\\xE0i vi\\u1EBFt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"textarea\",\n              value: this.state.content,\n              onChange: this.handleChangeContent,\n              autoFocus: true,\n              name: \"email\",\n              id: \"user_name\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleAddPost,\n            children: \"\\u0110\\u0103ng b\\xE0i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ModalPost;","map":{"version":3,"sources":["/home/hazo/Desktop/blog-reactjs/src/services/post/createPost.js"],"names":["React","Modal","ModalHeader","ModalBody","Form","Alert","FormGroup","Input","Label","Button","ModalFooter","createPost","ModalPost","Component","constructor","props","state","content","title","error","handleAddPost","bind","handleChangeContent","handleChangeTitle","result","undefined","err","onAddPostSuccess","closeModal","setState","console","log","e","target","value","render","visible"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Modal, ModalHeader, ModalBody, Form, Alert, FormGroup, Input, Label, Button, ModalFooter } from 'reactstrap';\nimport createPost from '../../services/post/createPost';\n\n\nclass ModalPost extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            content: '',\n            title: '',\n            error: '',\n        }\n        this.handleAddPost = this.handleAddPost.bind(this);\n        this.handleChangeContent = this.handleChangeContent.bind(this);\n        this.handleChangeTitle = this.handleChangeTitle.bind(this);\n\n    }\n\n    async handleAddPost() {\n        try {\n            const result = await createPost({\n                ...this.state,\n                error: undefined\n            });\n            if (result.err === 0) {\n                this.props.onAddPostSuccess(true);\n                this.props.closeModal();\n                return;\n            }\n            this.setState({\n                ...this.state,\n                error: 'Đăng bài thất bại!'\n            });\n        } catch (error) {\n            console.log(\"error\", error);\n        }\n    }\n\n    handleChangeTitle(e) {\n        this.setState({\n            ...this.state,\n            title: e.target.value,\n        });\n    }\n\n    handleChangeContent(e) {\n        this.setState({\n            ...this.state,\n            content: e.target.value,\n        });\n    }\n\n\n\n\n\n    render() {\n        return (\n            <Modal isOpen={this.props.visible || false}>\n                <ModalHeader toggle={this.props.closeModal}>Thêm bài viết mới</ModalHeader>\n                <ModalBody>\n                    {this.state.error && <Alert color=\"warning\">{this.state.error}</Alert>}\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"name\">Tiêu đề</Label>\n                            <Input value={this.state.title} onChange={this.handleChangeTitle} autoFocus name=\"email\" id=\"name\" placeholder=\"Tiêu đề bài viết\" />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"user_name\">Nội dung bài viết</Label>\n                            <Input type=\"textarea\" value={this.state.content} onChange={this.handleChangeContent} autoFocus name=\"email\" id=\"user_name\" placeholder=\"\" />\n                        </FormGroup>\n                    </Form>\n\n                    <ModalFooter>\n                        <Button onClick={this.handleAddPost}>Đăng bài</Button>\n                    </ModalFooter>\n\n                </ModalBody>\n            </Modal>\n        );\n    }\n}\n\nexport default ModalPost;"]},"metadata":{},"sourceType":"module"}