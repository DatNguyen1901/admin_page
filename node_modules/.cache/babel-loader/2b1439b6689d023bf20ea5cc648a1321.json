{"ast":null,"code":"var _jsxFileName = \"/home/hazo/Desktop/blog-reactjs/src/Page/Post/AddComment.jsx\";\nimport React from \"react\";\nimport { Input, Form, Button, Comment, Name } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nconst Editor = ({\n  onChange,\n  onSubmit,\n  submitting,\n  value\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n    children: /*#__PURE__*/_jsxDEV(TextArea, {\n      row: 4,\n      onChange: onChange,\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      htmlType: \"submit\",\n      loading: submitting,\n      onClick: onSubmit,\n      type: \"primary\",\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 5\n}, this);\n\n_c = Editor;\n\nclass AddComment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      console.log('comment');\n\n      if (!this.state.value) {\n        return;\n      }\n\n      addComment({\n        post: this.props.post,\n        content: this.state.value\n      }).then(res => {\n        this.props.commentSuccess(res);\n      });\n      this.setState({\n        submitting: true\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      comments: [],\n      submitting: false,\n      value: ''\n    };\n  }\n\n  render() {\n    const {\n      submitting,\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Comment, {\n        name: /*#__PURE__*/_jsxDEV(Name, {\n          alt: this.props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 24\n        }, this),\n        content: /*#__PURE__*/_jsxDEV(Editor, {\n          onChange: this.handleChange,\n          onSubmit: this.handleSubmit,\n          submitting: submitting,\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/home/hazo/Desktop/blog-reactjs/src/Page/Post/AddComment.jsx"],"names":["React","Input","Form","Button","Comment","Name","TextArea","Editor","onChange","onSubmit","submitting","value","AddComment","Component","constructor","props","handleSubmit","e","console","log","state","addComment","post","content","then","res","commentSuccess","setState","handleChange","target","comments","render","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,IAAd,EAAmBC,MAAnB,EAA0BC,OAA1B,EAAkCC,IAAlC,QAA6C,MAA7C;;AACA,MAAM;AAACC,EAAAA;AAAD,IAAaL,KAAnB;;AACA,MAAMM,MAAM,GAAE,CAAC;AACXC,EAAAA,QADW;AAEXC,EAAAA,QAFW;AAGXC,EAAAA,UAHW;AAIXC,EAAAA;AAJW,CAAD,kBAMV;AAAA,0BACI,QAAC,IAAD,CAAM,IAAN;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,GAAG,EAAE,CAAf;AAAkB,MAAA,QAAQ,EAAEH,QAA5B;AAAsC,MAAA,KAAK,EAAEG;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAA0B,MAAA,OAAO,EAAED,UAAnC;AAA+C,MAAA,OAAO,EAAED,QAAxD;AAAkE,MAAA,IAAI,EAAC,SAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ;;KAAMF,M;;AAiBN,MAAMK,UAAN,SAAyBZ,KAAK,CAACa,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAQlBC,YARkB,GAQFC,CAAD,IAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,UAAG,CAAC,KAAKC,KAAL,CAAWT,KAAf,EAAqB;AACjB;AACH;;AACDU,MAAAA,UAAU,CAAC;AACPC,QAAAA,IAAI,EAAC,KAAKP,KAAL,CAAWO,IADT;AAEPC,QAAAA,OAAO,EAAC,KAAKH,KAAL,CAAWT;AAFZ,OAAD,CAAV,CAGGa,IAHH,CAGQC,GAAG,IAAI;AACX,aAAKV,KAAL,CAAWW,cAAX,CAA0BD,GAA1B;AACD,OALH;AAOE,WAAKE,QAAL,CAAc;AACZjB,QAAAA,UAAU,EAAE;AADA,OAAd;AAGD,KAvBa;;AAAA,SAwBdkB,YAxBc,GAwBEX,CAAD,IAAQ;AACrB,WAAKU,QAAL,CAAc;AACZhB,QAAAA,KAAK,EAAEM,CAAC,CAACY,MAAF,CAASlB;AADJ,OAAd;AAGD,KA5Ba;;AAEd,SAAKS,KAAL,GAAY;AACRU,MAAAA,QAAQ,EAAC,EADD;AAERpB,MAAAA,UAAU,EAAC,KAFH;AAGRC,MAAAA,KAAK,EAAC;AAHE,KAAZ;AAKH;;AAsBGoB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAwB,KAAKS,KAAnC;AAEA,wBACE;AAAA,6BACE,QAAC,OAAD;AACE,QAAA,IAAI,eAAG,QAAC,IAAD;AAAM,UAAA,GAAG,EAAE,KAAKL,KAAL,CAAWiB;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADT;AAEE,QAAA,OAAO,eACL,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAE,KAAKJ,YAAvB;AAAqC,UAAA,QAAQ,EAAE,KAAKZ,YAApD;AAAkE,UAAA,UAAU,EAAEN,UAA9E;AAA0F,UAAA,KAAK,EAAEC;AAAjG;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA3CgC;;AA6CnC,eAAeC,UAAf","sourcesContent":["import React from \"react\";\nimport {Input,Form,Button,Comment,Name} from \"antd\";\nconst {TextArea} = Input ;\nconst Editor =({\n    onChange,\n    onSubmit,\n    submitting,\n    value,\n})=>(\n    <div>\n        <Form.Item>\n            <TextArea row={4} onChange={onChange} value={value}/>\n        </Form.Item>\n        <Form.Item>\n            <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n                Add Comment\n            </Button>\n        </Form.Item>\n    </div>\n);\nclass AddComment extends React.Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            comments:[],\n            submitting:false,\n            value:'',\n        };\n    }\n    handleSubmit = (e )=>{\n        console.log('comment');\n        if(!this.state.value){\n            return;\n        }\n        addComment({\n            post:this.props.post,\n            content:this.state.value,\n        }).then(res => {\n            this.props.commentSuccess(res);\n          });\n      \n          this.setState({\n            submitting: true,\n          });\n        };\n        handleChange = (e ) => {\n          this.setState({\n            value: e.target.value,\n          });\n        };\n        render() {\n          const { submitting, value } = this.state;\n      \n          return (\n            <div>\n              <Comment\n                name ={<Name alt={this.props.name} />}\n                content={\n                  <Editor onChange={this.handleChange} onSubmit={this.handleSubmit} submitting={submitting} value={value} />\n                }\n              />\n            </div>\n          );\n        }\n      }\n      export default AddComment;"]},"metadata":{},"sourceType":"module"}