{"ast":null,"code":"var _jsxFileName = \"/home/hazo/Desktop/blog-reactjs/src/Page/Post/ListPost.jsx\";\nimport React from 'react';\nimport posts from '../../services/post/Postlist'; // import PostItem from '../Post/PostItem';\n\nimport { Pagination, PaginationItem, PaginationLink, Button } from 'reactstrap';\nimport { withRouter } from 'react-router-dom'; // import ModalPost from './ModalPost';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fakeData = [{\n  post_id: '1',\n  title: 'Lorem Ipsum',\n  content: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for  will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n  user: {\n    user_name: 'minh'\n  }\n}, {\n  post_id: '2',\n  title: 'Lorem Ipsum',\n  content: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for  will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n  user: {\n    user_name: 'minh'\n  }\n}, {\n  post_id: '3',\n  title: 'Lorem Ipsum',\n  content: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for  will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n  user: {\n    user_name: 'minh'\n  }\n}, {\n  post_id: '4',\n  title: 'Lorem Ipsum',\n  content: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for  will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n  user: {\n    user_name: 'minh'\n  }\n}, {\n  post_id: '5',\n  title: 'Lorem Ipsum',\n  content: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for  will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n  user: {\n    user_name: 'minh'\n  }\n}];\n\nclass ListPost extends React.Component {\n  constructor(props) {\n    super(props);\n    let locationSearch = this.props.location.search;\n    let searchParam = new URLSearchParams(locationSearch);\n    this.state = {\n      list_post: fakeData,\n      pageSize: 1,\n      total: 10,\n      currenPage: parseInt(searchParam.get('current_page') || 1),\n      visibleModal: false\n    };\n    this.doGetPostList = this.doGetPostList.bind(this);\n    this.renderPagination = this.renderPagination.bind(this);\n    this.setCurrentPage = this.setCurrentPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.doGetPostList(this.state.currenPage);\n  }\n\n  async doGetPostList(offset) {\n    try {\n      this.setState({\n        loading: true\n      });\n      const result = await posts({\n        page_number: offset,\n        number_post_on_page: this.state.pageSize\n      });\n      console.log(\"result\", result);\n\n      if (result.err !== 0) {\n        console.log('loi');\n        return;\n      }\n\n      this.setState({\n        posts: result.data,\n        total: 100\n      });\n    } catch (e) {\n      console.log(e);\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  setCurrentPage(index) {\n    this.props.history.push(`?current_page=${index}`);\n    this.doGetPostList(index);\n  }\n\n  renderPagination() {\n    let pageNumber = [];\n\n    for (let i = 1; i <= Math.ceil(this.state.total / this.state.pageSize); i++) {\n      pageNumber.push(i);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Pagination, {\n      \"aria-label\": \"Page navigation example\",\n      children: [/*#__PURE__*/_jsxDEV(PaginationItem, {\n        children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n          first: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PaginationItem, {\n        children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n          previous: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), pageNumber.map(index => /*#__PURE__*/_jsxDEV(PaginationItem, {\n        onClick: () => this.setCurrentPage(index),\n        children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n          children: index\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 44\n      }, this)), /*#__PURE__*/_jsxDEV(PaginationItem, {\n        children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n          next: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PaginationItem, {\n        children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n          last: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 16\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"danger\",\n        onClick: () => this.setState({ ...this.state,\n          visibleModal: !this.state.visibleModal\n        }),\n        children: \"Th\\xEAm b\\xE0i vi\\u1EBFt m\\u1EDBi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), this.state.listpost.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(PostItem, {\n          post: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 69\n        }, this);\n      }), this.renderPagination(), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ModalPost, {\n          onAddPostSuccess: () => this.setCurrentPage(1),\n          visible: this.state.visibleModal,\n          closeModal: () => this.setState({ ...this.state,\n            visibleModal: !this.state.visibleModal\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(ListPost);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/hazo/Desktop/blog-reactjs/src/Page/Post/ListPost.jsx"],"names":["React","posts","Pagination","PaginationItem","PaginationLink","Button","withRouter","fakeData","post_id","title","content","user","user_name","ListPost","Component","constructor","props","locationSearch","location","search","searchParam","URLSearchParams","state","list_post","pageSize","total","currenPage","parseInt","get","visibleModal","doGetPostList","bind","renderPagination","setCurrentPage","componentDidMount","offset","setState","loading","result","page_number","number_post_on_page","console","log","err","data","e","index","history","push","pageNumber","i","Math","ceil","map","render","listpost","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport posts from '../../services/post/Postlist';\n// import PostItem from '../Post/PostItem';\nimport { Pagination, PaginationItem, PaginationLink, Button } from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n// import ModalPost from './ModalPost';\nconst fakeData = [\n    {\n        post_id: '1',\n        title: 'Lorem Ipsum',\n        content: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for  will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n        user: {\n            user_name: 'minh'\n        },\n    },\n    {\n        post_id: '2',\n        title: 'Lorem Ipsum',\n        content: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for  will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n        user: {\n            user_name: 'minh'\n        }\n    },\n    {\n        post_id: '3',\n        title: 'Lorem Ipsum',\n        content: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for  will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n        user: {\n            user_name: 'minh'\n        }\n    },\n    {\n        post_id: '4',\n        title: 'Lorem Ipsum',\n        content: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for  will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n        user: {\n            user_name: 'minh'\n        }\n    },\n    {\n        post_id: '5',\n        title: 'Lorem Ipsum',\n        content: 'It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using , making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for  will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).',\n        user: {\n            user_name: 'minh'\n        }\n    }\n]\nclass ListPost extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let locationSearch = this.props.location.search;\n        let searchParam = new URLSearchParams(locationSearch)\n\n        this.state = {\n            list_post: fakeData,\n            pageSize: 1,\n            total: 10,\n            currenPage: parseInt(searchParam.get('current_page') || 1),\n            visibleModal: false\n        }\n\n        this.doGetPostList = this.doGetPostList.bind(this);\n        this.renderPagination = this.renderPagination.bind(this);\n        this.setCurrentPage = this.setCurrentPage.bind(this);\n    }\n\n\n    componentDidMount() {\n        this.doGetPostList(this.state.currenPage);\n    }\n\n\n\n    async doGetPostList(offset) {\n        try {\n            this.setState({\n                loading: true,\n            });\n\n            const result = await posts({\n                page_number: offset,\n                number_post_on_page: this.state.pageSize,\n            });\n\n            console.log(\"result\", result);\n\n            if (result.err !== 0) {\n                console.log('loi');\n                return;\n            }\n\n            this.setState({\n                posts: result.data,\n                total: 100,\n            });\n        } catch (e) {\n            console.log(e);\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    };\n\n    setCurrentPage(index) {\n        this.props.history.push(`?current_page=${index}`);\n        this.doGetPostList(index);\n    }\n\n\n    renderPagination() {\n        let pageNumber = [];\n        for (let i = 1; i <= Math.ceil(this.state.total / this.state.pageSize); i++) {\n            pageNumber.push(i);\n        }\n        return <Pagination aria-label=\"Page navigation example\">\n            <PaginationItem>\n                <PaginationLink first />\n            </PaginationItem>\n            <PaginationItem>\n                <PaginationLink previous />\n            </PaginationItem>\n            {\n                pageNumber.map((index) => (<PaginationItem key={index} onClick={() => this.setCurrentPage(index)}>\n                    <PaginationLink >\n                        {index}\n                    </PaginationLink>\n                </PaginationItem>))\n            }\n            <PaginationItem>\n                <PaginationLink next />\n            </PaginationItem>\n            <PaginationItem>\n                <PaginationLink last />\n            </PaginationItem>\n        </Pagination>\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <Button color=\"danger\" onClick={() => this.setState({ ...this.state, visibleModal: !this.state.visibleModal })}>Thêm bài viết mới</Button>\n                {this.state.listpost.map((item, index) => { return (<PostItem key={index} post={item} />) })}\n                {this.renderPagination()}\n                <div>\n                    <ModalPost onAddPostSuccess={() => this.setCurrentPage(1)} visible={this.state.visibleModal} closeModal={() => this.setState({ ...this.state, visibleModal: !this.state.visibleModal })} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ListPost);"]},"metadata":{},"sourceType":"module"}